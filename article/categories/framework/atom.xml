<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Framework | SunDi3yansyah]]></title>
  <link href="http://sundi3yansyah.com/article/categories/framework/atom.xml" rel="self"/>
  <link href="http://sundi3yansyah.com/"/>
  <updated>2014-12-22T14:10:34+07:00</updated>
  <id>http://sundi3yansyah.com/</id>
  <author>
    <name><![CDATA[SunDi3yansyah]]></name>
    <email><![CDATA[sundi3yansyah@gmail.com]]></email>
  </author>
  <generator uri="https://ruby-lang.org/">Ruby</generator>

  
  <entry>
    <title type="html"><![CDATA[Ultra Framework ORM]]></title>
    <link href="http://sundi3yansyah.com/article/2014/08/27/ultra-framework-orm/"/>
    <updated>2014-08-27T01:18:16+07:00</updated>
    <id>http://sundi3yansyah.com/article/2014/08/27/ultra-framework-orm</id>
    <content type="html"><![CDATA[<p>Kali ini saya akan membagikan sebuah framework ala yudi purwanto yang saya berinama Ultra Framework Versi ORM. Dari yang sebelumnya belum mendukung ORM.</p>

<p>Aplikasi yang dibuat sangat sederhana namun memungkinkan kita untuk memahami cara kerjanya.</p>

<p><strong>Object Relaional Mapping(ORM)</strong> : Salah satu teknik memetakkan basisdata relational ke model object. : Salah satu teknik memetakkan basisdata relational ke model object.</p>

<!-- more -->


<p><strong>MVC</strong> pada awalnya banyak digunakan dalam aplikasi GUI dekstop, tetapi saat ini dengan perkembangan dan kematangan bahasa pemrograman web, bermunculanlah beberapa framework yang menggunakan arsitektur ini.</p>

<p><strong>MVC</strong>, singkatnya adalah cara yang efisien, bersih dan cepat untuk memisahkan kode program dari kode HTML, atau antar muka lain yang kita pilih.</p>

<p>MVC berarti, <strong>Model</strong> – <strong>View</strong> – <strong>Controller</strong>.</p>

<p><strong>Model</strong>: bertanggungjawab terhadap pengelolaan data seperti SQL databases dan operasi SELECT, UPDATE, DELETE,dsb, dst, dll</p>

<p><strong>View</strong>: menampilkan antarmuka (UI), html, css, javascript dan sebagainya</p>

<p><strong>Controller</strong>: Jantung dan otak dari arsitektur MVC, tempat semua request masuk, controller adalah yang menjembatani antara view dan model.</p>

<p><em>Ultra Framework versi ORM ini menggunakan Default Driver Mysql tetapi tidak menutup kemungkinan tidak bisa menggunakan Sqlite dan Postgres, Itu jelas salah tentu saja bisa.</em></p>

<p>Disini akan saya berikan Dokumentasi dan cara penggunaan Framework Versi ini.</p>

<ul>
<li>Langkah pertama download file yang ada di github.</li>
<li>Langkah kedua konfigurasi di Config.php yang ada dalam root dir/base/Config.php</li>
</ul>


<p>Setting nama semua yang ada di Config.php sesuaikan kebutuhan.</p>

<p>Seperti Host, Database, User, Password dan url</p>

<h4>Penjelasan</h4>

<p>Jika anda menggunakan Mysql isi bagian mysql, tetapi jika anda menggunakan Sqlite atau Postgres</p>

<p>hapus comment Configurasi dari masing masing Driver.</p>

<p>Untuk pengaturan Congfigurasi yang lain Di App.php yang berada di base/App.php</p>

<p>Oke kita masuk ketahap penggunaannya.</p>

<p>Disini saya memberikan contoh penggunaan dengan database.</p>

<p>Karena saat ini dalam contoh menggunakan Mysql jadi Setting di Config.php seperti berikut :</p>

<p>{% codeblock Config.php %}
ORM::configure(&lsquo;mysql:host=localhost; dbname=perpustakaan&rsquo;);
ORM::configure(&lsquo;username&rsquo;, &lsquo;root&rsquo;);
ORM::configure(&lsquo;password&rsquo;, &lsquo;1&rsquo;);
{% endcodeblock %}</p>

<p>Secara default sudah bisa berjalan dengan lancar jika diakses <a href="http://domain.com">http://domain.com</a> atau <a href="http://localhost/folder">http://localhost/folder</a> dan dicontrollers sudah ada file indexController.php dan testController.php.</p>

<p>Buat sebuah database dengan nama perpustakaan</p>

<p>Lalu buat sebuah tabel dengan nama books</p>

<p>{% codeblock books.sql %}
CREATE TABLE IF NOT EXISTS <code>books</code> (
<code>id</code> int(11) NOT NULL,
  <code>author</code> int(11) NOT NULL,
  <code>title</code> varchar(70) NOT NULL,
  <code>isbn</code> varchar(20) DEFAULT NULL,
  <code>publisher</code> varchar(30) NOT NULL,
  <code>year</code> int(4) NOT NULL,
  <code>summary</code> text,
  <code>coverMime</code> varchar(20) DEFAULT NULL,
  <code>coverImage</code> blob,
  <code>copies</code> tinyint(4) NOT NULL DEFAULT &lsquo;1&rsquo;
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;</p>

<p>INSERT INTO <code>books</code> (<code>id</code>, <code>author</code>, <code>title</code>, <code>isbn</code>, <code>publisher</code>, <code>year</code>, <code>summary</code>, <code>coverMime</code>, <code>coverImage</code>, <code>copies</code>) VALUES
(1, 1, &lsquo;Creating your MySQL Database: Practical Design Tips and\r\nTechniques&rsquo;, &lsquo;1904811302&rsquo;, &lsquo;Packt Publishing Ltd&rsquo;, 2006, &lsquo;A short guide for everyone on how to structure your data and\r\nset-up your MySQL database tables efficiently and easily.&rsquo;, NULL, NULL, 1),
(2, 2, &lsquo;ImageMagick Tricks&rsquo;, &lsquo;1904811868&rsquo;, &lsquo;Packt Publishing\r\nLtd&rsquo;, 2006, &lsquo;Unleash the power of ImageMagick with this fast, friendly\r\ntutorial, and tips guide&rsquo;, NULL, NULL, 1),
(3, 3, &lsquo;Building Websites with Plone&rsquo;, &lsquo;1904811027&rsquo;, &lsquo;Packt\r\nPublishing Ltd&rsquo;, 2004, &lsquo;An in-depth and comprehensive guide to the Plone content\r\nmanagement system&rsquo;, NULL, NULL, 1);
{% endcodeblock %}</p>

<h4>Model</h4>

<p>Pembuatan model sangat mudah sebagai contoh seperti dibawah ini</p>

<p>Buat sebuah file didalam folder models dengan nama SiteModel.php dengan nama tabel books,</p>

<p>terlebih dahulu setting Configurasi database.</p>

<p>{% codeblock SiteModel.php %}
&lt;?php
/**</p>

<hr />

<ul>
<li>@author : Yudi Purwanto</li>
<li>@link   : <a href="http://yudi-purwanto.com">http://yudi-purwanto.com</a></li>
<li>@since  : 14 May 2014</li>
<li>File    : SiteModel.php</li>
<li></li>
<li><p>**************************************/
class SiteModel extends Model
{
public function getBooks()
{
$list = ORM::table(&lsquo;books&rsquo;)->find_many();
return $list;
}
}</p></li>
</ul>


<p>/<em> End of file SiteModel.php </em>/
/<em> Location: ./models/SiteModel.php </em>/
{% endcodeblock %}</p>

<p><strong>Note : Untuk load sebuah model didalam sebuah controller dengan cara :</strong></p>

<p>{% codeblock root@sundi3yansyah %}
$this->loadModel(&lsquo;NamaModel&rsquo;);
{% endcodeblock %}</p>

<p>Contoh :</p>

<p>{% codeblock root@sundi3yansyah %}
$this->loadModel(&lsquo;Site&rsquo;);
{% endcodeblock %}</p>

<h4>Controller</h4>

<p>Kita bahas membuat sebuah controller disini saya contohkan testController.php yang mana sudah ada didalam folder controllers, nanti anda bisa mengakses <a href="http://localhost/folder/test">http://localhost/folder/test</a></p>

<p>Membuat sebuah controller, sebagai contoh :</p>

<p>{% codeblock testController.php %}
&lt;?php
/**</p>

<hr />

<ul>
<li>@author : Yudi Purwanto</li>
<li>@link     : <a href="http://yudi-purwanto.com">http://yudi-purwanto.com</a></li>
<li>@since   : 14 May 2014</li>
<li>File         : testController.php</li>
<li></li>
<li><p>**************************************/
class testController extends Controller
{ <br/>
 //<-- * Index Error * --->
 public function index() {
     header (&lsquo;HTTP/1.0 404 Not Found&rsquo;);
     include &lsquo;public/error/404.php&rsquo;; // Show Error 404
 }</p>

<p> public function test()
 {
  $output = $this->loadModel(&lsquo;Site&rsquo;);
  $this->view->title = &ldquo;Testing controller&rdquo;;
  $this->view->list = $output->getBooks();
/<em> Show Views </em>/
     $this->view->render(&lsquo;index&rsquo;, null);
 }
}</p></li>
</ul>


<p>/<em> End of file indexController.php </em>/
/<em> Location: ./controllers/indexController.php </em>/
{% endcodeblock %}</p>

<h4>View</h4>

<p>View, seperti halnya membuat sebuah Model dan Controller, langsung saja kita ke langkah pembuatannya dari pembuatan Model dan Controller kita akan menampilkan dengan view ini. Simak contoh berikut.</p>

<p><strong>Exstensi file view adalah .phtml jadi setiap membuat view dengan exstensi phtml</strong></p>

<p>{% codeblock php Exstensi file view adalah .phtml jadi setiap membuat view dengan exstensi phtml %}
&lt;!DOCTYPE html>
<html>
<head>
 <title>&lt;?php echo $this->title; ?></title>
 <link rel="stylesheet" type="text/css" href="<?php echo $layout['css']; ?>bootstrap.min.css&#8221;>
</head>
<body></p>

<div class="container">

<nav class="navbar navbar-inverse">
 <div class="navbar-header">
  <a class="navbar-brand" href="<?php echo url; ?>&#8220;>Crud</a>
 </div>
</nav>
<h1>All Data</h1>

<table class="table table-striped table-bordered">
 <thead>
  <tr>
  <td>Author and Title</td>
  <td>ISBN</td>
  <td>Publisher</td>
  <td>Year</td>
  <td>Summary</td>
  <td>Copies</td>
  </tr>
 </thead>
 <tbody>
  <?php
  $data = $this->list;
  foreach($data as $value):
  ?>
  <tr>
  <td><?php echo $value->title; ?></td>
  <td><?php echo $value->isbn; ?></td>
  <td><?php echo $value->publisher; ?></td>
  <td><?php echo $value->year; ?></td>
  <td><?php echo $value->summary; ?></td>
  <td><?php echo $value->copies; ?></td>
  </tr>
  <?php endforeach ?>
 </tbody>
</table>
</div>


<p></body>
</html>
{% endcodeblock %}</p>

<h4>Router</h4>

<p>Pada dasarnya jika anda membuat sebuah Controller, anda harus mendaftarkan ke <code>router.php</code></p>

<p>di <code>base/Router.php</code>, dengan cara sebagai berikut.</p>

<p>Perhatikan baik baik, bisa dibilang susah susah gampang disaat mendaftarkan controller ke router.</p>

<p>{% codeblock Router.php %}
&lt;?php
/**</p>

<hr />

<ul>
<li>@author : Yudi Purwanto</li>
<li>@link   : <a href="http://yudi-purwanto.com">http://yudi-purwanto.com</a></li>
<li>@since  : 14 May 2014</li>
<li>File    : Router.php</li>
<li></li>
<li><p>**************************************/
class Router
{
 private $<em>controller;
 private $</em>method;</p>

<p> public function <em>_construct() {
     $page        = $</em>GET[&lsquo;test&rsquo;];   //Test eg: <a href="http:website.com/test">http:website.com/test</a> dan jangan lupa setting htaccess</p>

<pre><code> /* function method controller */
 $staticPages = array(
                 'test'
 );

 //&lt;-- *  Pages Default * --&gt;
 if( !in_array( $page, $staticPages ) 
     &amp;&amp; isset( $page ) 
 ) {
      $this-&gt;_c $page );
     $this-&gt;_method     = strtolower( $page );

 }
 //&lt;--- ************* Pages ********* ---&gt;
 else if( isset( $page ) 
         &amp;&amp; in_array( $page, $staticPages )
 ) {
     //load nama controller adalah test = load nama folder test di dalam folder views, jadi harus sama
      $this-&gt;_c
     $this-&gt;_method     = strtolower( $page );
 }

 //&lt;-- * if no have variables defined $ _GET showed index * --&gt;
 if( !$this-&gt;_controller ) {
      $this-&gt;_c
 }

 if( !$this-&gt;_method ) {
     $this-&gt;_method = 'index';
 }
</code></pre>

<p> } //<--- * End * --></p>

<p> public function getController() {
     return $this->_controller;
 }</p>

<p> public function getMethod() {
     return $this->_method;
 }</p></li>
</ul>


<p>} //<-- * End Class * --></p>

<p>/<em> End of file Router.php </em>/
/<em> Location: ./base/Router.php </em>/
{% endcodeblock %}</p>

<p>Untuk file htaccessnya anda bisa menambahkan seperti ini :</p>

<p>{% codeblock .htaccess %}</p>

<h1>Test</h1>

<p>RewriteRule ^([a-zA-Z0-9-_]+)$ index.php?test=$1 [QSA,L]
{% endcodeblock %}</p>

<p><strong>Selamat Mencoba&hellip;!!!</strong></p>

<h3><a href="https://github.com/zhiephie/ultra-framework-orm">View Project on Github</a></h3>

<div class="github-widget" data-repo="zhiephie/ultra-framework-orm"></div>


<p><strong> <a href="http://www.yudi-purwanto.com/index.php/show/detail/framework-ultra-framework-orm">Source</a> </strong></p>
]]></content>
  </entry>
  
</feed>
